From 66c9279356886d5f5afb5c461ffb35a1861904ec Mon Sep 17 00:00:00 2001
From: Huy Duong <huy.duong@ologn.tech>
Date: Sat, 16 Aug 2025 18:33:09 +0700
Subject: [PATCH 1/3] Use H265 encode for rtsp opencv capture demo

---
 .../src/luckfox_mpi.cc                        | 25 +++++++++++++------
 .../src/main.cc                               |  4 +--
 2 files changed, 19 insertions(+), 10 deletions(-)

diff --git a/example/luckfox_pico_rtsp_opencv_capture/src/luckfox_mpi.cc b/example/luckfox_pico_rtsp_opencv_capture/src/luckfox_mpi.cc
index 42299f7..1b631d8 100644
--- a/example/luckfox_pico_rtsp_opencv_capture/src/luckfox_mpi.cc
+++ b/example/luckfox_pico_rtsp_opencv_capture/src/luckfox_mpi.cc
@@ -127,11 +127,23 @@ int venc_init(int chnId, int width, int height, RK_CODEC_ID_E enType) {
 	VENC_CHN_ATTR_S stAttr;
 	memset(&stAttr, 0, sizeof(VENC_CHN_ATTR_S));
 
-	// RTSP H264	
+	if (enType == RK_VIDEO_ID_AVC) {
+		stAttr.stRcAttr.enRcMode = VENC_RC_MODE_H264CBR;
+		stAttr.stRcAttr.stH264Cbr.u32BitRate = 10 * 1024;
+		stAttr.stRcAttr.stH264Cbr.u32Gop = 1;
+	} else if (enType == RK_VIDEO_ID_HEVC) {
+		stAttr.stRcAttr.enRcMode = VENC_RC_MODE_H265CBR;
+		stAttr.stRcAttr.stH265Cbr.u32BitRate = 10 * 1024;
+		stAttr.stRcAttr.stH265Cbr.u32Gop = 60;
+	} else if (enType == RK_VIDEO_ID_MJPEG) {
+		stAttr.stRcAttr.enRcMode = VENC_RC_MODE_MJPEGCBR;
+		stAttr.stRcAttr.stMjpegCbr.u32BitRate = 10 * 1024;
+	}
+
 	stAttr.stVencAttr.enType = enType;
-	//stAttr.stVencAttr.enPixelFormat = RK_FMT_YUV420SP;
-	stAttr.stVencAttr.enPixelFormat = RK_FMT_RGB888;	
-	stAttr.stVencAttr.u32Profile = H264E_PROFILE_MAIN;
+	stAttr.stVencAttr.enPixelFormat = RK_FMT_RGB888;
+	if (enType == RK_VIDEO_ID_AVC)
+		stAttr.stVencAttr.u32Profile = H264E_PROFILE_HIGH;
 	stAttr.stVencAttr.u32PicWidth = width;
 	stAttr.stVencAttr.u32PicHeight = height;
 	stAttr.stVencAttr.u32VirWidth = width;
@@ -139,10 +151,7 @@ int venc_init(int chnId, int width, int height, RK_CODEC_ID_E enType) {
 	stAttr.stVencAttr.u32StreamBufCnt = 2;
 	stAttr.stVencAttr.u32BufSize = width * height * 3 / 2;
 	stAttr.stVencAttr.enMirror = MIRROR_NONE;
-		
-	stAttr.stRcAttr.enRcMode = VENC_RC_MODE_H264CBR;
-	stAttr.stRcAttr.stH264Cbr.u32BitRate = 3 * 1024;
-	stAttr.stRcAttr.stH264Cbr.u32Gop = 1;
+
 	RK_MPI_VENC_CreateChn(chnId, &stAttr);
 
 	memset(&stRecvParam, 0, sizeof(VENC_RECV_PIC_PARAM_S));
diff --git a/example/luckfox_pico_rtsp_opencv_capture/src/main.cc b/example/luckfox_pico_rtsp_opencv_capture/src/main.cc
index 1add479..afb8f3d 100644
--- a/example/luckfox_pico_rtsp_opencv_capture/src/main.cc
+++ b/example/luckfox_pico_rtsp_opencv_capture/src/main.cc
@@ -85,11 +85,11 @@ int main(int argc, char *argv[]) {
 	rtsp_session_handle g_rtsp_session;
 	g_rtsplive = create_rtsp_demo(554);
 	g_rtsp_session = rtsp_new_session(g_rtsplive, "/live/0");
-	rtsp_set_video(g_rtsp_session, RTSP_CODEC_ID_VIDEO_H264, NULL, 0);
+	rtsp_set_video(g_rtsp_session, RTSP_CODEC_ID_VIDEO_H265, NULL, 0);
 	rtsp_sync_video_ts(g_rtsp_session, rtsp_get_reltime(), rtsp_get_ntptime());
 
 	// venc init
-	RK_CODEC_ID_E enCodecType = RK_VIDEO_ID_AVC;
+	RK_CODEC_ID_E enCodecType = RK_VIDEO_ID_HEVC;
 	venc_init(0, width, height, enCodecType);
 
 	printf("init success\n");	
-- 
2.43.0

