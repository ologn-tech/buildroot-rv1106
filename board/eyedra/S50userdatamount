#!/bin/sh

mount_part(){
if [ -z "$1" -o -z "$2" -o -z "$3" ];then
	echo "Invalid paramter, exit !!!"
	exit 1
fi
root_dev=$(mountpoint -n /)
root_dev=${root_dev%% *}
partname=$1
part_dev=/dev/block/by-name/$1
mountpt=$2
part_fstype=$3
part_realdev=/dev/mtd7

part_no=7
ubi_dev=/dev/ubi${part_no}
ubi_vol=${ubi_dev}_0
mount | grep $ubi_vol
if [ $? -eq 0 ];then
	echo "***********$partname has been mounted***********"
else
	if [ ! -e $ubi_vol ];then
		echo "***********$ubi_vol not exist***********"
		if [ ! -e $ubi_dev ];then
			echo "***********$ubi_dev not exist***********"
			ubiattach /dev/ubi_ctrl -m $part_no -d $part_no
			if [ $? -ne 0 ];then
				echo "ubiattach $part_realdev error, try to format..."
				ubiformat -y $part_realdev
				ubiattach /dev/ubi_ctrl -m $part_no -d $part_no
			fi
		fi
		ubi_info_dir=/sys/class/ubi/ubi${part_no}
		avail_eraseblocks=$(cat $ubi_info_dir/avail_eraseblocks)
		eraseblock_size=$(cat $ubi_info_dir/eraseblock_size)
		echo "try to make volume: $ubi_vol ..."
		echo "ubimkvol $ubi_dev -N $partname -s $((avail_eraseblocks*eraseblock_size))"
		ubimkvol $ubi_dev -N $partname -s $((avail_eraseblocks*eraseblock_size))
	fi
	mount -t $part_fstype $ubi_vol $mountpt
fi
}

case $1 in 
    start)
        if [ ! -d "/userdata" ];then
            mkdir -p /userdata
        fi 
        mount_part userdata /userdata ubifs ;
        ;; 
    stop) printf stop $0 finished\n ;; *) echo Usage: $0 {start|stop} exit 1 ;; esac
